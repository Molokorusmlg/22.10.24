const user = new User();

// –ë—É—Ä–≥–µ—Ä –º–µ–Ω—é
function setShowBurgerMenu() {
  const burger = document.querySelector(".burger__meny");
  if (!burger.classList.contains("base")) {
    if (burger.classList.contains("bhide")) {
      burger.classList.remove("bhide");
      burger.classList.add("bvis");
    } else {
      burger.classList.add("bhide");
      burger.classList.remove("bvis");
    }
  } else {
    burger.classList.remove("base");
    burger.classList.add("bvis");
  }
}

// –°–º–µ–Ω–∞ –∑–∞–¥–Ω–µ–≥–æ —Ñ–æ–Ω–∞ –∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function showEkb() {
  if (mainPage.className === "about__background_main") {
    titleEkb.innerHTML = `<h1 class="about__city__title">–≥–æ—Ä–æ–¥ –±–µ—Å–æ–≤üòà</h1>`;
    textEkb.innerHTML = `<p class="about__city__text">
          –°–∞–º—ã–π –∫—Ä—É—Ç–æ–π –≥–æ—Ä–æ–¥ –Ω–∞ –†—É—Å–∏. –°–∞–º—ã–π –º–æ–¥–Ω—ã–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π!
        </p>`;
    mainPage.classList.add("zloiEKB");
    mainPage.classList.remove("about__background_main");
  } else {
    titleEkb.innerHTML = `<h1 class="about__city__title">–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥</h1>`;
    textEkb.innerHTML = `<p class="about__city__text">
          –ì–ª–∞–≤–Ω—ã–π –≥–æ—Ä–æ–¥ –°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. –≠—Ç–∞–ª–æ–Ω –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞,
          –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–∏–∑–º–∞ –∏ –ø–æ—Å—Ç–º–æ–¥–µ—Ä–Ω–∏–∑–º–∞ –≤ –æ–¥–Ω–æ–º –ª–∏—Ü–µ
        </p>`;
    mainPage.classList.add("about__background_main");
    mainPage.classList.remove("zloiEKB");
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
function showAdminPanel() {
  const isAdmin = localStorage.getItem("admin");

  if (isAdmin === "false") return;
  const parentLinks = document.querySelector(".admin__panel__link");
  const adminPanelLink = `<a class = "header__link" href="../adminpanel/adminpanel.html">–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</a>`;
  parentLinks.innerHTML = adminPanelLink;
}

// –£–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–∞—Ä—Ç—É –≥–æ—Ä–æ–¥–∞
function hideText() {
  const isMapSmall = mapEkb.className === "map_small";

  mapText.classList.replace(
    isMapSmall ? "no-route" : "route",
    isMapSmall ? "route" : "no-route"
  );

  arrowMap.classList.replace(
    isMapSmall ? "arrow__map" : "arrow__map_hiden",
    isMapSmall ? "arrow__map_hiden" : "arrow__map"
  );

  mapEkb.classList.replace(
    isMapSmall ? "map_small" : "mapbig",
    isMapSmall ? "mapbig" : "map_small"
  );
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function modalMeny() {
  const elements = {
    modal: {
      element: document.querySelector(".modal"),
      hideClass: "bhide",
      showClass: "bvis",
      baseClass: "base",
    },
    form: {
      element: document.querySelector(".modal__form"),
      hideClass: "modal_hide",
      showClass: "modal_open",
      baseClass: "modal_base",
    },
  };

  const { modal, form } = elements;

  if (modal.element.classList.contains(modal.baseClass)) {
    modal.element.classList.replace(modal.baseClass, modal.showClass);
    form.element.classList.replace(form.baseClass, form.showClass);
    return;
  }

  const isHidden = modal.element.classList.contains(modal.hideClass);
  [modal, form].forEach((item) => {
    item.element.classList.toggle(item.hideClass, !isHidden);
    item.element.classList.toggle(item.showClass, isHidden);
  });
}

function modalClose() {
  const elements = {
    modal: {
      element: document.querySelector(".modal"),
      hideClass: "bhide",
      showClass: "bvis",
    },
    form: {
      element: document.querySelector(".modal__form"),
      hideClass: "modal_hide",
      showClass: "modal_open",
    },
  };

  Object.values(elements).forEach(({ element, hideClass, showClass }) => {
    element.classList.add(hideClass);
    element.classList.remove(showClass);
  });
}

//–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
async function getFullData() {
  try {
    const response = await fetch(USERS_URL + "users", {
      method: "GET",
    });
    const data = await response.json();
    const userList = data;
    userList.forEach((user) => {
      if (!(user.login === localStorage.getItem("login"))) return;
      localStorage.setItem("name", user.name);
      localStorage.setItem("admin", user.admin);
      localStorage.setItem("password", user.password);
    });
  } catch (error) {
    console.log(error);
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞
async function loadingPage() {
  await getFullData();
  showAdminPanel();
  Loading.classList.remove("active__loading");
  Loading.classList.add("loading-complete");
}

loadingPage();
